*GET EQUATES
	ORG	3000H
VAL	EQU	80H		; Value bit
SW	EQU	40H		; Switch bit
STR	EQU	20H		; String bit
ABR	EQU	10H		; Abbreviation bit
;-------------------
; Disk file buffers
;-------------------
BUFF1	DS	256		; On page boundaries
BUFF2	DS	256
;--------------------------------------
; Table of character matrices (8 x 10)
;--------------------------------------
TABLE	DC	32*10,0
	DB	0,00H,00H,00H,00H,00H,00H,00H,00H,0
	DB	0,08H,08H,08H,08H,08H,00H,08H,00H,0
	DB	0,24H,24H,24H,00H,00H,00H,00H,00H,0
	DB	0,24H,24H,7EH,24H,7EH,24H,24H,00H,0
	DB	0,08H,1EH,28H,1CH,0AH,3CH,08H,00H,0
	DB	0,00H,62H,64H,08H,10H,26H,46H,00H,0
	DB	0,30H,48H,48H,30H,4AH,44H,3AH,00H,0
	DB	0,04H,08H,10H,00H,00H,00H,00H,00H,0
	DB	0,04H,08H,10H,10H,10H,08H,04H,00H,0
	DB	0,20H,10H,08H,08H,08H,10H,20H,00H,0
	DB	0,08H,2AH,1CH,3EH,1CH,2AH,08H,00H,0
	DB	0,00H,08H,08H,3EH,08H,08H,00H,00H,0
	DB	0,00H,00H,00H,00H,00H,08H,08H,10H,0
	DB	0,00H,00H,00H,7EH,00H,00H,00H,00H,0
	DB	0,00H,00H,00H,00H,00H,00H,08H,00H,0
	DB	0,00H,02H,04H,08H,10H,20H,40H,00H,0
	DB	0,3CH,42H,46H,5AH,62H,42H,3CH,00H,0
	DB	0,08H,18H,28H,08H,08H,08H,3EH,00H,0
	DB	0,3CH,42H,02H,0CH,30H,40H,7EH,00H,0
	DB	0,3CH,42H,02H,1CH,02H,42H,3CH,00H,0
	DB	0,04H,0CH,14H,24H,7EH,04H,04H,00H,0
	DB	0,7EH,40H,78H,04H,02H,44H,38H,00H,0
	DB	0,1CH,20H,40H,7CH,42H,42H,3CH,00H,0
	DB	0,7EH,42H,04H,08H,10H,10H,10H,00H,0
	DB	0,3CH,42H,42H,3CH,42H,42H,3CH,00H,0
	DB	0,3CH,42H,42H,3EH,02H,04H,38H,00H,0
	DB	0,00H,00H,08H,00H,00H,08H,00H,00H,0
	DB	0,00H,00H,08H,00H,00H,08H,08H,10H,0
	DB	0,06H,0CH,18H,30H,18H,0CH,06H,00H,0
	DB	0,00H,00H,7EH,00H,7EH,00H,00H,00H,0
	DB	0,60H,30H,18H,0CH,18H,30H,60H,00H,0
	DB	0,3CH,42H,02H,0CH,10H,00H,10H,00H,0
	DB	0,1CH,22H,4AH,56H,4CH,20H,1EH,00H,0
	DB	0,18H,24H,42H,7EH,42H,42H,42H,00H,0
	DB	0,7CH,22H,22H,3CH,22H,22H,7CH,00H,0
	DB	0,1CH,22H,40H,40H,40H,22H,1CH,00H,0
	DB	0,78H,24H,22H,22H,22H,24H,78H,00H,0
	DB	0,7EH,40H,40H,78H,40H,40H,7EH,00H,0
	DB	0,7EH,40H,40H,78H,40H,40H,40H,00H,0
	DB	0,1CH,22H,40H,4EH,42H,22H,1CH,00H,0
	DB	0,42H,42H,42H,7EH,42H,42H,42H,00H,0
	DB	0,1CH,08H,08H,08H,08H,08H,1CH,00H,0
	DB	0,0EH,04H,04H,04H,04H,44H,38H,00H,0
	DB	0,42H,44H,48H,70H,48H,44H,42H,00H,0
	DB	0,40H,40H,40H,40H,40H,40H,7EH,00H,0
	DB	0,42H,66H,5AH,5AH,42H,42H,42H,00H,0
	DB	0,42H,62H,52H,4AH,46H,42H,42H,00H,0
	DB	0,3CH,42H,42H,42H,42H,42H,3CH,00H,0
	DB	0,7CH,42H,42H,7CH,40H,40H,40H,00H,0
	DB	0,3CH,42H,42H,42H,4AH,44H,3AH,00H,0
	DB	0,7CH,42H,42H,7CH,48H,44H,42H,00H,0
	DB	0,3CH,42H,40H,3CH,02H,42H,3CH,00H,0
	DB	0,3EH,08H,08H,08H,08H,08H,08H,00H,0
	DB	0,42H,42H,42H,42H,42H,42H,3CH,00H,0
	DB	0,42H,42H,42H,24H,24H,18H,18H,00H,0
	DB	0,42H,42H,42H,5AH,5AH,66H,42H,00H,0
	DB	0,42H,42H,24H,18H,24H,42H,42H,00H,0
	DB	0,22H,22H,22H,1CH,08H,08H,08H,00H,0
	DB	0,7EH,02H,04H,18H,20H,40H,7EH,00H,0
	DB	0,3CH,20H,20H,20H,20H,20H,3CH,00H,0
	DB	0,00H,40H,20H,10H,08H,04H,02H,00H,0
	DB	0,3CH,04H,04H,04H,04H,04H,3CH,00H,0
	DB	0,08H,14H,22H,00H,00H,00H,00H,00H,0
	DB	0,00H,00H,00H,00H,00H,00H,00H,0FFH,0
	DB	0,10H,08H,04H,00H,00H,00H,00H,00H,0
	DB	0,00H,00H,38H,04H,3CH,44H,3AH,00H,0
	DB	0,40H,40H,5CH,62H,42H,62H,5CH,00H,0
	DB	0,00H,00H,3CH,42H,40H,42H,3CH,00H,0
	DB	0,02H,02H,3AH,46H,42H,46H,3AH,00H,0
	DB	0,00H,00H,3CH,42H,7EH,40H,3CH,00H,0
	DB	0,0CH,12H,10H,7CH,10H,10H,10H,00H,0
	DB	0,00H,00H,3AH,46H,46H,3AH,02H,3CH,0
	DB	0,40H,40H,5CH,62H,42H,42H,42H,00H,0
	DB	0,08H,00H,18H,08H,08H,08H,1CH,00H,0
	DB	0,04H,00H,0CH,04H,04H,04H,44H,38H,0
	DB	0,40H,40H,44H,48H,50H,68H,44H,00H,0
	DB	0,18H,08H,08H,08H,08H,08H,1CH,00H,0
	DB	0,00H,00H,76H,49H,49H,49H,49H,00H,0
	DB	0,00H,00H,5CH,62H,42H,42H,42H,00H,0
	DB	0,00H,00H,3CH,42H,42H,42H,3CH,00H,0
	DB	0,00H,00H,5CH,62H,62H,5CH,40H,40H,0
	DB	0,00H,00H,3AH,46H,46H,3AH,02H,02H,0
	DB	0,00H,00H,5CH,62H,40H,40H,40H,00H,0
	DB	0,00H,00H,3EH,40H,3CH,02H,7CH,00H,0
	DB	0,10H,10H,7CH,10H,10H,12H,0CH,00H,0
	DB	0,00H,00H,42H,42H,42H,46H,3AH,00H,0
	DB	0,00H,00H,42H,42H,42H,24H,18H,00H,0
	DB	0,00H,00H,41H,49H,49H,49H,36H,00H,0
	DB	0,00H,00H,42H,24H,18H,24H,42H,00H,0
	DB	0,00H,00H,42H,42H,46H,3AH,02H,3CH,0
	DB	0,00H,00H,7EH,04H,18H,20H,7EH,00H,0
	DB	0,0CH,10H,10H,20H,10H,10H,0CH,00H,0
	DB	0,08H,08H,08H,00H,08H,08H,08H,00H,0
	DB	0,30H,08H,08H,04H,08H,08H,30H,00H,0
	DB	0,30H,49H,06H,00H,00H,00H,00H,00H,0
	DB	0,08H,08H,3EH,08H,08H,00H,3EH,00H,0
; 128
	DB	0,00H,00H,00H,00H,00H,00H,00H,00H,0
	DB	0F0H,0F0H,0F0H,0F0H,0,0,0,0,0,0
	DB	0FH,0FH,0FH,0FH,0,0,0,0,0,0
	DB	0FFH,0FFH,0FFH,0FFH,0,0,0,0,0,0
	DB	0,0,0,0,0F0H,0F0H,0F0H,0F0H,0,0
	DB	0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0,0
	DB	0FH,0FH,0FH,0FH,0F0H,0F0H,0F0H,0F0H,0,0
	DB	0FFH,0FFH,0FFH,0FFH,0F0H,0F0H,0F0H,0F0H,0,0
	DB	0,0,0,0,0FH,0FH,0FH,0FH,0,0
	DB	0F0H,0F0H,0F0H,0F0H,0FH,0FH,0FH,0FH,0,0
	DB	0FH,0FH,0FH,0FH,0FH,0FH,0FH,0FH,0,0
	DB	0FFH,0FFH,0FFH,0FFH,0FH,0FH,0FH,0FH,0,0
	DB	0,0,0,0,0FFH,0FFH,0FFH,0FFH,0,0
	DB	0F0H,0F0H,0F0H,0F0H,0FFH,0FFH,0FFH,0FFH,0,0
	DB	0FH,0FH,0FH,0FH,0FFH,0FFH,0FFH,0FFH,0,0
	DB	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0,0
	DB	0,0,0,0,0,0,0,0,0F0H,0F0H
	DB	0F0H,0F0H,0F0H,0F0H,0,0,0,0,0F0H,0F0H
	DB	0FH,0FH,0FH,0FH,0,0,0,0,0F0H,0F0H
	DB	0FFH,0FFH,0FFH,0FFH,0,0,0,0,0F0H,0F0H
	DB	0,0,0,0,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H
	DB	0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H
	DB	0FH,0FH,0FH,0FH,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H
	DB	0FFH,0FFH,0FFH,0FFH,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H
	DB	0,0,0,0,0FH,0FH,0FH,0FH,0F0H,0F0H
	DB	0F0H,0F0H,0F0H,0F0H,0FH,0FH,0FH,0FH,0F0H,0F0H
	DB	0FH,0FH,0FH,0FH,0FH,0FH,0FH,0FH,0F0H,0F0H
	DB	0FFH,0FFH,0FFH,0FFH,0FH,0FH,0FH,0FH,0F0H,0F0H
	DB	0,0,0,0,0FFH,0FFH,0FFH,0FFH,0F0H,0F0H
	DB	0F0H,0F0H,0F0H,0F0H,0FFH,0FFH,0FFH,0FFH,0F0H,0F0H
	DB	0FH,0FH,0FH,0FH,0FFH,0FFH,0FFH,0FFH,0F0H,0F0H
	DB	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0F0H,0F0H
	DB	0,0,0,0,0,0,0,0,0FH,0FH
	DB	0F0H,0F0H,0F0H,0F0H,0,0,0,0,0FH,0FH
	DB	0FH,0FH,0FH,0FH,0,0,0,0,0FH,0FH
	DB	0FFH,0FFH,0FFH,0FFH,0,0,0,0,0FH,0FH
	DB	0,0,0,0,0F0H,0F0H,0F0H,0F0H,0FH,0FH
	DB	0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0FH,0FH
	DB	0FH,0FH,0FH,0FH,0F0H,0F0H,0F0H,0F0H,0FH,0FH
	DB	0FFH,0FFH,0FFH,0FFH,0F0H,0F0H,0F0H,0F0H,0FH,0FH
	DB	0,0,0,0,0FH,0FH,0FH,0FH,0FH,0FH
	DB	0F0H,0F0H,0F0H,0F0H,0FH,0FH,0FH,0FH,0FH,0FH
	DB	0FH,0FH,0FH,0FH,0FH,0FH,0FH,0FH,0FH,0FH
	DB	0FFH,0FFH,0FFH,0FFH,0FH,0FH,0FH,0FH,0FH,0FH
	DB	0,0,0,0,0FFH,0FFH,0FFH,0FFH,0FH,0FH
	DB	0F0H,0F0H,0F0H,0F0H,0FFH,0FFH,0FFH,0FFH,0FH,0FH
	DB	0FH,0FH,0FH,0FH,0FFH,0FFH,0FFH,0FFH,0FH,0FH
	DB	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FH,0FH
	DB	0,0,0,0,0,0,0,0,0FFH,0FFH
	DB	0F0H,0F0H,0F0H,0F0H,0,0,0,0,0FFH,0FFH
	DB	0FH,0FH,0FH,0FH,0,0,0,0,0FFH,0FFH
	DB	0FFH,0FFH,0FFH,0FFH,0,0,0,0,0FFH,0FFH
	DB	0,0,0,0,0F0H,0F0H,0F0H,0F0H,0FFH,0FFH
	DB	0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0F0H,0FFH,0FFH
	DB	0FH,0FH,0FH,0FH,0F0H,0F0H,0F0H,0F0H,0FFH,0FFH
	DB	0FFH,0FFH,0FFH,0FFH,0F0H,0F0H,0F0H,0F0H,0FFH,0FFH
	DB	0,0,0,0,0FH,0FH,0FH,0FH,0FFH,0FFH
	DB	0F0H,0F0H,0F0H,0F0H,0FH,0FH,0FH,0FH,0FFH,0FFH
	DB	0FH,0FH,0FH,0FH,0FH,0FH,0FH,0FH,0FFH,0FFH
	DB	0FFH,0FFH,0FFH,0FFH,0FH,0FH,0FH,0FH,0FFH,0FFH
	DB	0,0,0,0,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
	DB	0F0H,0F0H,0F0H,0F0H,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
	DB	0FH,0FH,0FH,0FH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
	DB	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
; 192
	DB	0,08H,1CH,3EH,7FH,7FH,3EH,08H,08H,0
	DB	0,00H,36H,7FH,7FH,3EH,1CH,08H,00H,0
	DB	0,08H,1CH,3EH,7FH,3EH,1CH,08H,00H,0
	DB	0,1CH,1CH,08H,6BH,7FH,6BH,08H,1CH,0
	DB	0,3CH,42H,0A5H,81H,0A5H,99H,42H,3CH,0
	DB	0,3CH,42H,0A5H,81H,99H,0A5H,42H,3CH,0
	DB	0,04H,08H,10H,20H,10H,08H,04H,3CH,0
	DB	0,20H,10H,08H,04H,08H,10H,20H,3CH,0
	DB	0,00H,00H,39H,46H,46H,39H,00H,00H,0
	DB	0,3CH,22H,3CH,22H,22H,3CH,20H,40H,0
	DB	0,61H,12H,14H,18H,10H,30H,30H,00H,0
	DB	0,0CH,12H,10H,0CH,0AH,12H,0CH,00H,0
	DB	0,06H,08H,10H,3EH,10H,08H,06H,00H,0
	DB	0,16H,06H,08H,10H,1CH,02H,0CH,00H,0
	DB	0,2CH,52H,12H,12H,02H,02H,02H,00H,0
	DB	0,08H,14H,22H,3EH,22H,14H,08H,00H,0
	DB	0,00H,20H,20H,20H,22H,22H,1CH,00H,0
	DB	0,40H,48H,50H,60H,50H,4AH,44H,00H,0
	DB	0,20H,10H,10H,10H,18H,24H,42H,00H,0
	DB	0,24H,24H,24H,24H,3AH,20H,20H,00H,0
	DB	0,00H,00H,32H,12H,14H,18H,10H,00H,0
	DB	0,08H,1CH,20H,18H,20H,1CH,02H,0CH,0
	DB	0,00H,18H,24H,42H,42H,24H,18H,00H,0
	DB	0,00H,00H,3EH,54H,14H,14H,14H,00H,0
	DB	0,00H,18H,24H,24H,38H,20H,20H,00H,0
	DB	0,00H,00H,3EH,48H,48H,30H,00H,00H,0
	DB	0,00H,00H,3EH,48H,08H,08H,08H,08H,0
	DB	0,00H,02H,64H,24H,24H,24H,18H,00H,0
	DB	0,08H,1CH,2AH,2AH,2AH,1CH,08H,00H,0
	DB	0,00H,00H,62H,14H,08H,14H,23H,00H,0
	DB	0,49H,2AH,2AH,1CH,08H,08H,08H,00H,0
	DB	0,00H,00H,22H,41H,49H,49H,36H,00H,0
	DB	0,1CH,22H,41H,41H,63H,22H,63H,00H,0
	DB	0,1EH,10H,10H,10H,50H,30H,10H,00H,0
	DB	0,00H,08H,00H,3EH,00H,08H,00H,00H,0
	DB	0,7EH,20H,10H,0CH,10H,20H,7EH,00H,0
	DB	0,00H,32H,4CH,00H,32H,4CH,00H,00H,0
	DB	0,00H,00H,08H,14H,22H,7FH,00H,00H,0
	DB	0,04H,08H,10H,10H,08H,08H,10H,20H,0
	DB	0,01H,02H,7FH,08H,7FH,20H,40H,00H,0
	DB	0,10H,08H,04H,3EH,10H,08H,04H,00H,0
	DB	0,3FH,52H,24H,08H,12H,25H,42H,00H,0
	DB	0,1CH,22H,41H,41H,7FH,22H,22H,63H,0
	DB	0,00H,00H,36H,49H,49H,36H,00H,00H,0
	DB	0,00H,02H,04H,48H,50H,60H,40H,00H,0
	DB	0,1EH,20H,1CH,22H,1CH,02H,3CH,00H,0
	DB	0,22H,55H,2AH,14H,2AH,55H,22H,00H,0
	DB	0,3CH,42H,9DH,0A1H,0A1H,9DH,42H,3CH,0
	DB	0,42H,24H,18H,24H,18H,24H,42H,00H,0
	DB	0,3EH,4AH,4AH,3AH,0AH,0AH,0AH,0AH,0
	DB	0,08H,1CH,2AH,28H,2AH,1CH,08H,00H,0
	DB	0,3CH,7AH,0A5H,0A5H,0B9H,0A9H,66H,3CH,0
	DB	0,5FH,60H,63H,62H,64H,7BH,60H,5FH,0
	DB	0,0FFH,04H,03H,0FCH,02H,0FCH,04H,0F8H,0
	DB	0,0FCH,02H,0FCH,00H,00H,00H,00H,00H,0
	DB	0,78H,44H,44H,78H,4AH,44H,4BH,00H,0
	DB	0,61H,82H,84H,68H,16H,29H,49H,86H,0
	DB	0,0EH,06H,0AH,70H,90H,90H,60H,00H,0
	DB	0,1CH,22H,22H,22H,1CH,08H,1CH,08H,0
	DB	0,0EH,08H,08H,0EH,00H,00H,00H,00H,0
	DB	0,0FFH,0E3H,0DDH,0F3H,0F7H,0FFH,0F7H,0FFH,0
	DB	0,08H,14H,08H,1CH,2AH,08H,14H,22H,0
	DB	0,08H,14H,08H,1CH,2AH,14H,3EH,14H,0
	DB	0,08H,14H,22H,22H,22H,2AH,36H,22H,0
;------------
; Initialize
;------------
START	LD	(STACK+1),SP	; Save old stack
	LD	SP,BUFF1	; Make new one
	SVC	@CKBRKC		; Abort if break pressed
	JP	NZ,ABORT
	PUSH	HL		; Save command line
	LD	HL,TITLE$	; Display title
	SVC	@DSPLY
	POP	HL		; Restore command line
;----------------------------
; Transfer filenames to FCBs
;----------------------------
	LD	DE,FCB1		; Transfer filespec
	SVC	@FSPEC
	JP	NZ,IFN		; Abort if erros
	LD	DE,FCB2		; Transfer filespec
	SVC	@FSPEC
	JP	NZ,IFN		; Abort if error
	JP	MAIN		; Main program
;---------------
; Abort or exit
;---------------
ABORT	LD	HL,-1		; Abort
	DB	0DDH
EXIT	LD	HL,0		; Exit
LEAVE	PUSH	HL		; Save state
	LD	DE,FCB2
	SVC	@CLOSE
	POP	HL
STACK	LD	SP,$-$		; Restore stack
	RET
;----------------
; Error routines
;----------------
IFN	LD	HL,IFN$		; Invalid filename
	SVC	@LOGOT		; Log it
	JR	ABORT
;
PARMERR	LD	A,44		; Parameter error
DOSERR	LD	L,A		; Put error in HL
	LD	H,0
	OR	80H		; Short errors
	LD	C,A		; Display errors
	SVC	@ERROR
	JR	LEAVE		; Restore stack
;------------
; Open files
;------------
OPEN	SVC	@FLAGS$		; Get SFLAG$
	SET	0,(IY+'S'-'A')	; Force to read
	LD	DE,FCB1		; FCB for 1
	LD	HL,BUFF1	; File buffer for 1
	LD	B,0		; LRL = 256
	SVC	@OPEN		; Open file
	JP	NZ,DOSERR	; Abort if DOS error
	LD	DE,FCB2		; FCB for 2
	LD	HL,BUFF2	; File buffer for 2
	LD	B,0		; LRL = 256
	SVC	@INIT		; Open file
	JP	NZ,DOSERR	; DOS error
	RET
;-----------------------
; Read a byte from file
;-----------------------
GET	PUSH	DE		; Save registers
	PUSH	BC
	LD	DE,FCB1		; First file
	SVC	@GET		; Get byte
	JP	NZ,DOSERR	; DOS error
	POP	BC		; Restore registers
	POP	DE
	RET
;---------------------
; Save a byte to file
;---------------------
PUT	PUSH	DE		; Save registers
	PUSH	BC
	LD	DE,FCB2		; Second file
	LD	C,A
	SVC	@PUT		; Save byte
	JP	NZ,DOSERR	; DOS error
	POP	BC		; Restore registers
	POP	DE
	RET
;------------------------
; Get byte for character
; A = character, C = offset
;------------------------
GBYTE	PUSH	HL		; Save HL
	LD	L,A		; Transfer A to HL
	LD	H,0
	PUSH	HL		; Save value
	ADD	HL,HL		; Multiply by 4
	ADD	HL,HL
	POP	DE		; Add original value
	ADD	HL,DE		; (multiply by 5)
	ADD	HL,HL		; Multiply by 10
	LD	D,.HIGH.TABLE	; Start of table
	LD	E,C		; Offset
	ADD	HL,DE		; Address of byte
	LD	A,(HL)		; Get byte in A
	POP	HL		; Restore HL
	RET
;-----------------------
; Start of main program
;-----------------------
MAIN	CALL	OPEN		; Open both files
	LD	B,24		; 24 lines of text
MAIN1	PUSH	BC		; Save counter
	LD	HL,VBUFF	; VSAVE image buffer
	LD	B,81		; One line
MAIN2	CALL	GET		; Get a byte
	LD	(HL),A		; Store it
	INC	HL		; Next address
	DJNZ	MAIN2		; Loop
	LD	C,0		; First scan line
MAIN3	LD	B,80		; 80 bytes
	LD	HL,VBUFF	; Image buffer
MAIN4	LD	A,(HL)		; Character
	INC	HL		; Next byte
	CALL	GBYTE		; Get graphics byte
	CALL	PUT		; Save byte
	DJNZ	MAIN4		; Loop until done
	INC	C		; Next scan line
	LD	A,C		; Is it past 9?
	CP	10
	JR	NZ,MAIN3	; Loop if not
	POP	BC		; Line counter
	DJNZ	MAIN1		; Loop until done
	JP	LEAVE		; Exit program
;----------------------
; Messages and storage
;----------------------
TITLE$	DB	'Convert VSAVE files to HR 1.0',0AH
	DB	'  copyright (c) 1991 by Matthew Reed',0AH
	DB	'  all rights reserved',0AH,0DH
IFN$	DB	'Invalid filename',0DH
VBUFF	DS	81
FCB1	DS	32
FCB2	DS	32
	END	START
